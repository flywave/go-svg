PROJECT( antigrain )

CMAKE_MINIMUM_REQUIRED( VERSION 2.4.8 )

SET(AGG_MAJOR_VERSION 0 )
SET(AGG_MINOR_VERSION 1 )
SET(AGG_BUILD_VERSION 1 )

SET( AGG_FLAGS "" )
SET( AGG_INCLUDE_DIRS "" )

LINK_DIRECTORIES(  ${antigrain_BINARY_DIR}/lib )

OPTION( agg_USE_GPC "Use Gpc Boolean library" OFF)
OPTION( agg_USE_FREETYPE "Use Freetype library" OFF)
OPTION( agg_USE_EXPAT "Use Expat library" OFF)
OPTION( agg_USE_DEBUG "For debug version" OFF)

IF(APPLE)
INCLUDE_DIRECTORIES( BEFORE
    ${CMAKE_CURRENT_SOURCE_DIR}/include/darwin)
  INCLUDE_DIRECTORIES(AFTER "${CMAKE_CURRENT_SOURCE_DIR}/../libxml/mac
                                    ${CMAKE_CURRENT_SOURCE_DIR}/../libxml/mac/include")
ENDIF()

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
INCLUDE_DIRECTORIES( BEFORE
    ${CMAKE_CURRENT_SOURCE_DIR}/include/linux)
INCLUDE_DIRECTORIES( AFTER "${CMAKE_CURRENT_SOURCE_DIR}/../libxml/linux
                                    ${CMAKE_CURRENT_SOURCE_DIR}/../libxml/linux/include")
ENDIF()

IF (WIN32)
  INCLUDE_DIRECTORIES(AFTER "${CMAKE_CURRENT_SOURCE_DIR}/../libxml/win32
                                    ${CMAKE_CURRENT_SOURCE_DIR}/../libxml/win32/include")
  INCLUDE_DIRECTORIES( BEFORE
    ${CMAKE_CURRENT_SOURCE_DIR}/include/win32)
ENDIF()


IF (WIN32)
  INCLUDE_DIRECTORIES(AFTER "${CMAKE_CURRENT_SOURCE_DIR}/../libexpat/arch/win")
ELSE()
  INCLUDE_DIRECTORIES(AFTER "${CMAKE_CURRENT_SOURCE_DIR}/../libexpat/arch/unix")
ENDIF()

INCLUDE_DIRECTORIES(
    "${CMAKE_CURRENT_SOURCE_DIR}/../libexpat/expat/lib"
    "${CMAKE_CURRENT_SOURCE_DIR}/../freetype2/include/"
    "${CMAKE_CURRENT_SOURCE_DIR}/../freetype2/src/include/"
    "${CMAKE_CURRENT_SOURCE_DIR}/../zlib"
    "${CMAKE_CURRENT_BINARY_DIR}/../zlib"
    "${CMAKE_CURRENT_SOURCE_DIR}/../libxml/src/include/"
    "${CMAKE_CURRENT_SOURCE_DIR}/../icu/source/common/"
    "${CMAKE_CURRENT_SOURCE_DIR}/../icu/source/i18n/"
)

IF( agg_USE_DEBUG )
    SET( CMAKE_DEBUG_POSTFIX "d" )
ENDIF( agg_USE_DEBUG )

IF(WIN32)
    ADD_DEFINITIONS( -D_MSWVC_ -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE )
    SET( WIN32GUI WIN32 )    
    INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/font_win32_tt )
    SET( AGG_INCLUDE_DIRS ${AGG_INCLUDE_DIRS} font_win32_tt )    
ENDIF(WIN32)

IF(UNIX)
    ADD_DEFINITIONS( -D__UNIX__  )
    SET( WIN32GUI "" )

    FIND_PACKAGE(X11)
    IF(X11_FOUND)  
        INCLUDE_DIRECTORIES(${X11_INCLUDE_DIRS})
        LINK_LIBRARIES(${X11_LIBRARIES})
    ENDIF(X11_FOUND)

ENDIF(UNIX)

INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/include )
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/svg )

SET( AGG_INCLUDE_DIRS ${AGG_INCLUDE_DIRS} include )    

IF( agg_USE_FREETYPE )
    INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/font_freetype )	
    SET( AGG_INCLUDE_DIRS ${AGG_INCLUDE_DIRS} font_freetype )    
    ADD_DEFINITIONS( -DAGG_USE_FREETYPE )
    SET( AGG_FLAGS ${AGG_FLAGS} -DAGG_USE_FREETYPE )    
ENDIF( agg_USE_FREETYPE )

IF ( agg_USE_GPC )
    INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR}/gpc )
    SET( AGG_INCLUDE_DIRS ${AGG_INCLUDE_DIRS} gpc )    
    ADD_DEFINITIONS( -DAGG_USE_GPC )
    SET( AGG_FLAGS ${AGG_FLAGS} -DAGG_USE_GPC )    
ENDIF ( agg_USE_GPC )

ADD_SUBDIRECTORY( src )
ADD_SUBDIRECTORY( svg )
